#!/usr/bin/env bash
# author: yooonn

function assert_docker_available() {
  docker -v 1>/dev/null 2>&1 || (echo "Docker not installed" && exit 1)

  docker ps 1>/dev/null 2>&1 || (echo "Docker not started" && exit 1)
}

# assert_container_not_exist container_name
function assert_container_not_exist() {
  assert_docker_available

  docker ps -a --format "table {{.Names}}" | grep "$1" >/dev/null 2>&1 || return 0
  echo "Container \`$1\` already existed!"
  exit 1
}

# assert_container_exist container_name
function assert_container_exist() {
  assert_docker_available

  docker ps -a --format "table {{.Names}}" | grep "$1" >/dev/null 2>&1 && return 0
  echo "Container \`$1\` not exist!"
  exit 1
}

# assert_container_started container_name
function assert_container_started() {
  assert_docker_available

  docker ps --format "table {{.Names}}" | grep "$1" >/dev/null 2>&1 && return 0
  echo "Container \`$1\` not started!"
  exit 1
}

function cd_container() {
    assert_container_started "$1"
    docker exec -it "$1" sh
}

function restart_container() {
  assert_container_exist "$1"
  docker restart "$1" || exit 1
}

# create_network_if_absent network_name
function create_network_if_absent() {
  assert_docker_available

  #    docker ps -a | grep "$1" || (echo "container $1 not found." && exit 1)
  docker network ls | grep "$1" 1>/dev/null ||
    (printf "Network \`%s\` not found. Creating it!\n" "$1" &&
      docker network create -d bridge "$1" || exit 1)
}

# echo $(get_script_path)
function get_script_path() {
  script_path="$( cd "$( dirname "$0" )" >/dev/null 2>&1 && pwd )"
  echo "$script_path"
}

function find_dir() {
  find_dir0 "$(
    cd "$(dirname "$1")" || exit 1
    pwd
  )"
}

function find_dir0() {
  parent="$1"
  if [ "${#parent}" -le "${#HOME}" ]; then
    echo "Cannot not deduce Work dir and Volumes dir."
    exit 1
  fi
  code=0
  ls "$parent"/.git >/dev/null 2>&1 || code=1
  if [ "$code" -eq 0 ]; then
    root_dir="$parent"
    mkdir -p "$parent/volumes" || exit 1
    volumes_dir="$parent/volumes"
  else
    find_dir0 "$(dirname "$parent")"
  fi
}

sh_dir=$(dirname "$0")
root_dir=""
volumes_dir=""

find_dir "$0"

# Global variables
# SH_DIR
# ROOT_DIR
# VOLUMES_DIR
# G_YOO_NETWORK
# G_MYSQL_NETWORK
# G_MYSQL8_ALIAS
# G_MYSQL8_CONTAINER
# G_NACOS_ALIAS
# G_MYSQL_USER
# G_MYSQL_PASSWD
# G_MYSQL8_PORT

# shellcheck disable=SC2034
SH_DIR="$sh_dir"
# shellcheck disable=SC2034
ROOT_DIR="$root_dir"
# shellcheck disable=SC2034
VOLUMES_DIR="$volumes_dir"
# shellcheck disable=SC2034
G_YOO_NETWORK="netyooonn"
# shellcheck disable=SC2034
G_MYSQL_NETWORK="$G_YOO_NETWORK"
# shellcheck disable=SC2034
G_MYSQL8_ALIAS=mysql8
# shellcheck disable=SC2034
G_MYSQL8_CONTAINER=mysql8
# shellcheck disable=SC2034
G_NACOS_ALIAS=nacos
# shellcheck disable=SC2034
G_MYSQL_USER=root
# shellcheck disable=SC2034
G_MYSQL_PASSWD=root
# shellcheck disable=SC2034
G_MYSQL8_PORT=3306
